// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Alias {
    id   Int    @id
    name String
}

model Brand {
    id       Int       @id
    name     String
    products Product[]
}

model Category {
    id     Int            @id
    alias  Int?
    parent Int?
    names  CategoryName[]
}

model CategoryName {
    id         Int      @id @default(autoincrement())
    category   Category @relation(fields: [categoryId], references: [id], onUpdate: Cascade, onDelete: Cascade)
    categoryId Int
    lang       String
    text       String?
}

model Product {
    id            Int               @id @default(autoincrement())
    productId     Int
    active        Boolean
    weight        Float
    freeTransport Boolean           @default(false)
    variantId     Int               @unique
    sku           String
    ean           String
    brand         Brand?            @relation(fields: [brandId], references: [id])
    brandId       Int?
    createdAt     DateTime          @default(now())
    updatedAt     DateTime          @default(now()) @updatedAt
    titles        ProductOnTitles[]
}

model ProductTitle {
    id                 Int                  @id @default(autoincrement())
    name               String?
    lang               String
    newPrice           Float                @default(0)
    oldPrice           Float                @default(0)
    priceDifference    Float
    priceDifferenceAt  DateTime?
    priceNotifications PriceNotifications[]
    createdAt          DateTime             @default(now())
    updatedAt          DateTime             @default(now())
    products           ProductOnTitles[]
}

model ProductOnTitles {
    product        Product      @relation(fields: [productId], references: [id])
    productId      Int
    productTitle   ProductTitle @relation(fields: [productTitleId], references: [id])
    productTitleId Int

    @@id([productId, productTitleId])
}

model PriceNotifications {
    id             Int          @id @default(autoincrement())
    isSent         Boolean
    lang           String
    productTitle   ProductTitle @relation(fields: [productTitleId], references: [id], onUpdate: Cascade, onDelete: Cascade)
    productTitleId Int
    createdAt      DateTime     @default(now())
    updatedAt      DateTime     @default(now())
}
